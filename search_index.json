[["scoreClass.html", "5 Student performance level classification 5.1 数据变量说明 5.2 描述性分析 5.3 模型建立", " 5 Student performance level classification 5.1 数据变量说明 变量说明。 变量中最重要的的为Class学生等级变量，是我们建模的目标变量。 edudata &lt;- read_csv(&quot;data/xAPI-Edu-Data.csv&quot;) head(edudata) ## # A tibble: 6 x 17 ## gender NationalITy PlaceofBirth StageID GradeID SectionID Topic Semester ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 M KW KuwaIT lowerlevel G-04 A IT F ## 2 M KW KuwaIT lowerlevel G-04 A IT F ## 3 M KW KuwaIT lowerlevel G-04 A IT F ## 4 M KW KuwaIT lowerlevel G-04 A IT F ## 5 M KW KuwaIT lowerlevel G-04 A IT F ## 6 F KW KuwaIT lowerlevel G-04 A IT F ## # ... with 9 more variables: Relation &lt;chr&gt;, raisedhands &lt;dbl&gt;, ## # VisITedResources &lt;dbl&gt;, AnnouncementsView &lt;dbl&gt;, Discussion &lt;dbl&gt;, ## # ParentAnsweringSurvey &lt;chr&gt;, ParentschoolSatisfaction &lt;chr&gt;, ## # StudentAbsenceDays &lt;chr&gt;, Class &lt;chr&gt; 5.2 描述性分析 5.2.1 封装绘图函数 fun_bar &lt;- function(data, xlab, fillc, pos, xname, yname, legend){ data %&gt;% group_by({{xlab}}) %&gt;% # dplyr中的自定函数参数需要使用{{}}括起来 mutate(count = n()) %&gt;% ggplot(aes(reorder({{xlab}}, count), count, fill = {{fillc}})) + geom_col(position = pos) + #pos = &quot;stack&quot; or &quot;fill&quot; labs(x = xname, y = yname) + coord_flip() + theme_bw() + guides(fill = guide_legend(title = legend)) } 5.2.2 不同教育程度的学生选择课程主题 p1 &lt;- fun_bar(data = edudata, xlab = Topic, fillc = StageID, pos = &quot;stack&quot;, xname = &quot;Topic&quot;, yname = &quot;Student_Count&quot;, legend = &quot;教育程度&quot;) p2 &lt;- fun_bar(data = edudata, xlab = Topic, fillc = StageID, pos = &quot;fill&quot;, xname = &quot;Topic&quot;, yname = &quot;Per_Student_Count&quot;, legend = &quot;教育程度&quot;) p1/p2 图5.1: 不同教育程度的学生选择课程主题 由图5.1可以看出： 课程主题最多的为IT、French和Arabic，其中选择IT的课程主题的学员远高于其他课。 无论哪种教育程度，IT、Science、Math和English四种课程都是必修的（三种颜色都有）。 5.2.3 不同课程主题监护人情况 这部分主要针对家长的情况进行分析，了解父母对学员学习的不同情况。对应在数据集中的变量为Relation。 p3 &lt;- fun_bar(data = edudata, xlab = Topic, fillc = Relation, pos = &quot;stack&quot;, xname = &quot;Topic&quot;, yname = &quot;Student_count&quot;, legend = &quot;监护人情况&quot;) p4 &lt;- fun_bar(data = edudata, xlab = Topic, fillc = Relation, pos = &quot;fill&quot;, xname = &quot;Topic&quot;, yname = &quot;Student_count&quot;, legend = &quot;监护人情况&quot;) p3/p4 图5.2: 不同课程主题监护人情况 由图5.2可以看出： 总体而言，监护人为父亲的较多。其中，IT和Math课程中，负责人为父亲的超过75%。 French课程，监护人大多数为母亲，占70%左右。 5.2.4 不同课程学生学习成绩 p5 &lt;- fun_bar(data = edudata, xlab = Topic, fillc = Class, pos = &quot;stack&quot;, xname = &quot;Topic&quot;, yname = &quot;Student_count&quot;, legend = &quot;学生成绩&quot;) p6 &lt;- fun_bar(data = edudata, xlab = Topic, fillc = Class, pos = &quot;fill&quot;, xname = &quot;Topic&quot;, yname = &quot;Student_count&quot;, legend = &quot;学生成绩&quot;) p5/p6 图5.3: 不同课程学生学习成绩 由图5.3: 所有课程中，只有Biology课程中，属于高水平的学生数超过了50%。 在Geology课程中，没有低水平的学生。 5.2.5 不同教室学生成绩水平 p7 &lt;- fun_bar(data = edudata, xlab = SectionID, fillc = Class, pos = &quot;stack&quot;, xname = &quot;Section_ID&quot;, yname = &quot;Student_count&quot;, legend = &quot;学生成绩&quot;) p8 &lt;- fun_bar(data = edudata, xlab = SectionID, fillc = Class, pos = &quot;fill&quot;, xname = &quot;Section_ID&quot;, yname = &quot;Student_count&quot;, legend = &quot;学生成绩&quot;) p7/p8 图5.4: 不同教室学生成绩水平 由图5.4可以看出： 在A班的学生最多，C班的学生最少。 C班的低水平成绩的学生相对较多，其它两个班级的成绩水平基本一致。 5.2.6 不同学期、不同成绩水平与监护人的关系 # 封装函数，去掉坐标轴翻转 fun_bar2 &lt;- function(data, xlab, fillc, pos, xname, yname, legend){ data %&gt;% group_by({{xlab}}) %&gt;% # dplyr中的自定函数参数需要使用{{}}括起来 mutate(count = n()) %&gt;% ggplot(aes(reorder({{xlab}}, count), count, fill = {{fillc}})) + geom_col(position = pos) + #pos = &quot;stack&quot; or &quot;fill&quot; labs(x = xname, y = yname) + theme_bw() + guides(fill = guide_legend(title = legend)) } p9 &lt;- fun_bar2(edudata, Semester, Relation, pos = &quot;stack&quot;, xname = &quot;Semester&quot;, yname = &quot;Student_count&quot;, legend = &quot;监护人情况&quot;) p10 &lt;- fun_bar2(edudata, Semester, Relation, pos = &quot;fill&quot;, xname = &quot;Semester&quot;, yname = &quot;per_Student_count&quot;, legend = &quot;监护人情况&quot;) p11 &lt;- fun_bar2(edudata, Class, Relation, pos = &quot;stack&quot;, xname = &quot;Class&quot;, yname = &quot;Student_count&quot;, legend = &quot;监护人情况&quot;) p12 &lt;- fun_bar2(edudata, Class, Relation, pos = &quot;fill&quot;, xname = &quot;Class&quot;, yname = &quot;per_Student_count&quot;, legend = &quot;监护人情况&quot;) (p9|p10) / (p11|p12) 图5.5: 不同学期、不同成绩水平与监护人的关系 由图5.5可知： 第一学期父亲作为监护人的学生数比第二学期多。 总体看，成绩水平较高的学生中，监护人为母亲的比较多；其它水平均是父亲较多。 5.2.7 家长是否回答调查问卷、成绩水平与家长对学校是否满意的关系 p13 &lt;- fun_bar2(edudata, ParentAnsweringSurvey, ParentschoolSatisfaction, pos = &quot;stack&quot;, xname = &quot;ParentAnsweringSurvey&quot;, yname = &quot;Student_count&quot;, legend = &quot;是否满意&quot;) p14 &lt;- fun_bar2(edudata, ParentAnsweringSurvey, ParentschoolSatisfaction, pos = &quot;fill&quot;, xname = &quot;ParentAnsweringSurvey&quot;, yname = &quot;Per_Student_count&quot;, legend = &quot;是否满意&quot;) p15 &lt;- fun_bar2(edudata, Class, ParentschoolSatisfaction, pos = &quot;stack&quot;, xname = &quot;Class&quot;, yname = &quot;Student_count&quot;, legend = &quot;是否满意&quot;) p16 &lt;- fun_bar2(edudata, Class, ParentschoolSatisfaction, pos = &quot;fill&quot;, xname = &quot;Class&quot;, yname = &quot;Per_Student_count&quot;, legend = &quot;是否满意&quot;) (p13|p14)/(p15|p16) 图5.6: 家长是否回答调查问卷、成绩水平与家长对学校是否满意的关系 由图5.6可以看出： 有超过一半的家长回答了问卷，其中，回答问卷的家长大部分对学校满意，而未回答问卷的则大部分对学校不满。 成绩越高，家长对学校越满意。 5.2.8 性别、逃课次数与学生成绩水平的关系 p17 &lt;- fun_bar2(edudata, gender, Class, pos = &quot;stack&quot;, xname = &quot;Gender&quot;, yname = &quot;Student_count&quot;, legend = &quot;成绩水平&quot;) p18 &lt;- fun_bar2(edudata, gender, Class, pos = &quot;fill&quot;, xname = &quot;Gender&quot;, yname = &quot;Per_Student_count&quot;, legend = &quot;成绩水平&quot;) p19 &lt;- fun_bar2(edudata, StudentAbsenceDays, Class, pos = &quot;stack&quot;, xname = &quot;Class&quot;, yname = &quot;Student_count&quot;, legend = &quot;成绩水平&quot;) p20 &lt;- fun_bar2(edudata, StudentAbsenceDays, Class, pos = &quot;fill&quot;, xname = &quot;Class&quot;, yname = &quot;Per_Student_count&quot;, legend = &quot;成绩水平&quot;) (p17|p18)/(p19|p20) 图5.7: 性别、逃课次数与学生成绩水平的关系 由图5.7可知： 女生比男生数量少很多，但高水平成绩的人数明显比男生多；中水平成绩男女比例基本持平。 逃课超过7天的的学生基本无法取得好的成绩。 5.2.9 举手次数和参加讨论次数与成绩水平关系 fun_bar3 &lt;- function(data, xlab, ylab, fillc, xname, yname){ data %&gt;% group_by({{xlab}}) %&gt;% summarise(Mcount = mean({{ylab}})) %&gt;% ggplot(aes({{xlab}}, Mcount, fill = {{fillc}})) + geom_col() + labs(x = xname, y = yname) + theme_bw() + theme(legend.position = &quot;none&quot;) } edudata$Class &lt;- factor(edudata$Class, c(&quot;H&quot;, &quot;M&quot;, &quot;L&quot;), ordered = TRUE) p21 &lt;- fun_bar3(data = edudata, xlab = Class, ylab = raisedhands, fillc = Class, &quot;成绩水平&quot;, &quot;平均举手次数&quot; ) p22 &lt;- fun_bar3(data = edudata, xlab = Class, ylab = Discussion, fillc = Class, &quot;成绩水平&quot;, &quot;平均参与讨论次数&quot; ) p21|p22 图5.8: 举手次数和参加讨论次数与成绩水平关系 由图5.8可知： 举手次数和参与讨论次数越多，成绩水平越高。 5.3 模型建立 5.3.1 回归树模型建立 5.3.1.1 分层抽样 set.seed(1234) # 按照数据目标8:2进行分层抽样，返回矩阵形式的抽样索引 index &lt;- createDataPartition(edudata$Class, p = 0.8, list = F) train &lt;- edudata[index, ] test &lt;- edudata[-index, ] # 建立回归树模型 rpart_model &lt;- rpart(Class ~., data = train) # type = &quot;class&quot;指定预测结果是具体的某个类别 prep_rp &lt;- predict(rpart_model, test[-17], type = &quot;class&quot;) confusionMatrix(prep_rp, test$Class) ## Confusion Matrix and Statistics ## ## Reference ## Prediction H M L ## H 18 3 0 ## M 9 29 3 ## L 1 10 22 ## ## Overall Statistics ## ## Accuracy : 0.7263 ## 95% CI : (0.6252, 0.8128) ## No Information Rate : 0.4421 ## P-Value [Acc &gt; NIR] : 1.882e-08 ## ## Kappa : 0.5806 ## ## Mcnemar&#39;s Test P-Value : 0.05103 ## ## Statistics by Class: ## ## Class: H Class: M Class: L ## Sensitivity 0.6429 0.6905 0.8800 ## Specificity 0.9552 0.7736 0.8429 ## Pos Pred Value 0.8571 0.7073 0.6667 ## Neg Pred Value 0.8649 0.7593 0.9516 ## Prevalence 0.2947 0.4421 0.2632 ## Detection Rate 0.1895 0.3053 0.2316 ## Detection Prevalence 0.2211 0.4316 0.3474 ## Balanced Accuracy 0.7990 0.7320 0.8614 prp(rpart_model) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
